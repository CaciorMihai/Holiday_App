Cacior Mihai  05.03.2018

Aplicatia este un proiect Intellij.
Executabilele se afla in directorul out iar in ./out/productions/AB4_Holiday_App
se afla un makefile a carui run ruleaza aplicatia.

Aplicatia are o interfata in consola si are un help care explica cum
se interactioneaza cu aceasta.

Am stabilit ca formatul fisierului de input sa fie astfel:

Locatie|Tip|Ierarhie|Perioada|Pret pe zi|Activitati

Pe fiecare linie este cate o locatie, informatiile sunt divizate de "|".
1) Primul lucru este numele locatiei (Bucuresti, Cluj, Predeal sau Romania).
2) Acesta este urmat de tipul locatiei (Tara/Judet/Oras/Cartier etc).
3) In continuare avem ierarhia (pentru Predeal avem Romania Brasov). Aceasta este
de forma Tara->Judet->Oras etc (o tara are mai multe judete, un judet are
mai multe orase, un oras are mai multe cartiere/sectoare etc). Ierarhia trebuie
sa fie neaparat completa, daca locatia este un oras acesa trebuie sa apartina
unui judet care sa apartina unei tari.
4) Perioada in care se poate visita.
5) Pretul pe zi pentru acea locatie.
6) O lista de activitati.



Ierarhia este construita astfel:
Toate locatiile (Tarile, Judetele, Orasele, Cartierele etc) sunt un obiect
care extinde clasa abstracta Location. Aceasta clasa abstracta contine tot
comportamentul unei destinatii turistice (lista de activitati, perioada, pretul)
dar si o lista de subdivizii (o lista de Judete pt o Tara de exemplu).

Locatiile concrete extind Locatie dar nu adauga nici o functionalitate noua.

Ierarhia poate fi extinsa usor prin crearea unei clase noi (sa zicem clasa
Cartier) si adaugarea tipului in fabrica de locatii (mai scriem un caz in
switch care adauga cartierul in ierarhie, daca orasul/judetul/tara nu sunt
deja in ierarhie le adauga acum).

Avem o clasa World care este radacina ierarhiei, aceasta contine o lista de tari
si e singleton, ca si fabrica de locatii, pentru ca nu e corect conceptual sa
avem mai mult de o instanta pentru fiecare.



Cautari:
1) Cautarea unei locatii trebuie facuta cu ierarhia completa pana la acea locatie
(de exemplu daca vrem sa cautam Predeal cautam "Romania Brasov Predeal")
Cautarea se efectueaza in timp constant deoarece folosesc LinkedHashMap pentru
a stoca locatiile.

2) Cautarea a celor N mai ieftine locatii unde se poate efectua o anumita 
activitate intr-o perioada data.
Toate activitatile sunt stocate intr-un LinkedHashMap in clasa World. Fiecare
activitate memoreaza locatiile unde poate fi efectuata intr-un TreeMap sortat
dupa pretul zilnic. Astfel aceasta cautare se efectueaza aproximativ in O(N) 
(Depinde de numarul de locatii cu activitatea respetiva dar interval 
necorespunzator).
Din cauza comportamentului TreeMap-ului in cazul in care o activitate se poate
efectua in mai multe locatii cu acelas pret, numai una din ele este afisata.

3) Cautarea a top N locatii din o Tara/ un Judet/un Oras din o anumita perioada.
Fiecare locatie memoreaza locatiile si intr-un TreeMap ordonate dupa pret.
Cautarea este efectuata in aproximativ O(N).

Fiecare cautare are o metoda corespunazatoare in clasa World care returneaza
informatiile dorite sub forma unui String.
